[PrefixDeclaration]
:		http://visualdataweb.org/semangit/
dc:		http://purl.org/dc/elements/1.1/#
dbo:		http://dbpedia.org/ontology/
owl:		http://www.w3.org/2002/07/owl#
rdf:		http://www.w3.org/1999/02/22-rdf-syntax-ns#
xml:		http://www.w3.org/XML/1998/namespace
xsd:		http://www.w3.org/2001/XMLSchema#
obda:		https://w3id.org/obda/vocabulary#
rdfs:		http://www.w3.org/2000/01/rdf-schema#

[MappingDeclaration] @collection [[
mappingId	UserMap
target		:user/{id} a :user ; :github_user_login {login}^^xsd:string ; :github_user_company {company}^^xsd:string ; :github_user_created_at {created_at}^^xsd:dateTime ; :github_user_fake {fake}^^xsd:boolean ; :github_user_deleted {deleted}^^xsd:boolean ; :github_user_lng {long}^^xsd:float ; :github_user_lat {lat}^^xsd:float ; :github_user_country_code {country_code}^^xsd:string ; :github_user_state dbo:State/{state} ; :github_user_city dbo:City/{city} ; :github_user_location {location}^^rdfs:string . 
source		select id, login, company, created_at, fake, deleted, `long`, lat, country_code, state, city, location from users

mappingId	ProjectMap
target		:repository/{id} a :repository ; :repository_url {url}^^xsd:anyURI ; :github_has_owner :user/{owner_id} ; :github_project_name {name} ; :github_project_description {description} ; :repository_created_at {created_at}^^xsd:dateTime ; :github_forked_from :repository/{forked_from} ; :github_project_deleted {deleted}^^xsd:boolean . 
source		select id, url, owner_id, name, description, created_at, forked_from, deleted from projects

mappingId	PullRequestMap
target		:pull_request/{id} a :pull_request ; :pull_request_head_project :repository/{head_repo_id} ; :pull_request_base_project :repository/{base_repo_id} ; :pull_request_head_commit :commit/{head_commit_id} ; :pull_request_base_commit :commit/{base_commit_id} ; :github_pull_request_id {pullreq_id}^^xsd:integer ; :github_pull_request_intra_branch {intra_branch}^^xsd:boolean . 
source		select * from pull_requests

mappingId	ProjectCommit
target		:commit/{commit_id} :commit_belongs_to_repository :repository/{project_id} . 
source		select commit_id, project_id from project_commits

mappingId	UserCommit
target		:commit/{id} :commit_commited_by :user/{committer_id} . 
source		select id, committer_id from commits

mappingId	PullRequestCommentMap
target		:comment/{comment_id} a :comment ; :comment_for :pull_request/{pull_request_id} , :commit/{commit_id} ; :comment_author :user/{user_id} ; :comment_body {body}^^xsd:string ; :comment_pos {position}^^xsd:integer ; :comment_created_at {created_at}^^xsd:dateTime . 
source		select comment_id, pull_request_id, commit_id, user_id, body, position, created_at from pull_request_comments

mappingId	PullRequestHistoryMap
target		:github_issue_event/{id} :github_pull_request_action_pull_request :pull_request/{pull_request_id} ; :github_pull_request_action_created_at {created_at}^^xsd:dateTime ; :github_issue_event_action {action}^^xsd:string . 
source		select * from pull_request_history

mappingId	PullRequestCommitsMap
target		:pull_request/{pull_request_id} :pull_request_has_commit :commit/{commit_id} . 
source		select * from pull_request_commits

mappingId	FollowerMap
target		:github_follow_event/{follower_id}/{user_id} a :github_follow_event ; :github_follower :user/{follower_id} ; :github_follows :user/{user_id} ; :github_following_since {created_at}^^xsd:dateTime . 
source		select * from followers

mappingId	ProjectLanguageMap
target		:github_project_language/{project_id}/{language} a :github_project_language ; :github_project_language_repo :repository/{project_id} ; :github_project_language_is :programming_language/{language} ; :github_project_language_bytes {bytes}^^xsd:integer ; :github_project_language_timestamp {created_at}^^xsd:dateTime . 
source		select * from project_languages

mappingId	UserOrgMap
target		:user/{id} a :user ; :github_user_is_org "true"^^xsd:boolean . 
source		select * from users where type = 'ORG'

mappingId	CommitMap
target		:commit/{id} a :commit ; :commit_sha {sha}^^xsd:string ; :commit_author :user/{author_id} ; :commit_commited_by :user/{committer_id} ; :commit_created_at {created_at} . 
source		select id, sha, author_id, committer_id, created_at from commits

mappingId	WatcherMap
target		:github_follow_event/{repo_id}/{user_id} a :github_follow_event ; :github_follows :repository/{repo_id} ; :github_follower :user/{user_id} ; :github_following_since {created_at}^^xsd:dateTime . 
source		select * from watchers

mappingId	IssueMap
target		:github_issue/{id} a :github_issue ; :github_issue_project :repository/{repo_id} ; :github_issue_reporter :user/{reporter_id} ; :github_issue_assignee :user/{assignee_id} ; :github_issue_pull_request :github_pull_request/{pull_request_id} ; :github_issue_created_at {created_at}^^xsd:dateTime . 
source		select id, repo_id, reporter_id, assignee_id, pull_request_id, created_at from issues

mappingId	PullRequestMergeMap
target		:pull_request/{pull_request_id} a :pull_request ; :github_pull_request_merged "true"^^xsd:boolean . 
source		select * from pull_request_history where action = 'merged'

mappingId	PullRequestUserMap
target		:pull_request/{pull_request_id} a :pull_request ; :pull_request_user :user/{actor_id} . 
source		select * from pull_request_history
]]

